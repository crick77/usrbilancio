/*
 * This file is generated by jOOQ.
 */
package it.usr.web.usrbilancio.domain.tables.records;


import it.usr.web.usrbilancio.domain.tables.Richiesta;

import java.math.BigDecimal;
import java.time.LocalDate;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RichiestaRecord extends UpdatableRecordImpl<RichiestaRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>usrbilancio.richiesta.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>usrbilancio.richiesta.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>usrbilancio.richiesta.id_competenza</code>.
     */
    public void setIdCompetenza(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>usrbilancio.richiesta.id_competenza</code>.
     */
    public Integer getIdCompetenza() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>usrbilancio.richiesta.numero_protocollo</code>.
     */
    public void setNumeroProtocollo(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>usrbilancio.richiesta.numero_protocollo</code>.
     */
    public String getNumeroProtocollo() {
        return (String) get(2);
    }

    /**
     * Setter for <code>usrbilancio.richiesta.data_protocollo</code>.
     */
    public void setDataProtocollo(LocalDate value) {
        set(3, value);
    }

    /**
     * Getter for <code>usrbilancio.richiesta.data_protocollo</code>.
     */
    public LocalDate getDataProtocollo() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>usrbilancio.richiesta.ingresso</code>.
     */
    public void setIngresso(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>usrbilancio.richiesta.ingresso</code>.
     */
    public Byte getIngresso() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>usrbilancio.richiesta.importo</code>.
     */
    public void setImporto(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>usrbilancio.richiesta.importo</code>.
     */
    public BigDecimal getImporto() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>usrbilancio.richiesta.note</code>.
     */
    public void setNote(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>usrbilancio.richiesta.note</code>.
     */
    public String getNote() {
        return (String) get(6);
    }

    /**
     * Setter for <code>usrbilancio.richiesta.nomefile</code>.
     */
    public void setNomefile(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>usrbilancio.richiesta.nomefile</code>.
     */
    public String getNomefile() {
        return (String) get(7);
    }

    /**
     * Setter for <code>usrbilancio.richiesta.nomefile_locale</code>.
     */
    public void setNomefileLocale(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>usrbilancio.richiesta.nomefile_locale</code>.
     */
    public String getNomefileLocale() {
        return (String) get(8);
    }

    /**
     * Setter for <code>usrbilancio.richiesta.versione</code>.
     */
    public void setVersione(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>usrbilancio.richiesta.versione</code>.
     */
    public Long getVersione() {
        return (Long) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RichiestaRecord
     */
    public RichiestaRecord() {
        super(Richiesta.RICHIESTA);
    }

    /**
     * Create a detached, initialised RichiestaRecord
     */
    public RichiestaRecord(Integer id, Integer idCompetenza, String numeroProtocollo, LocalDate dataProtocollo, Byte ingresso, BigDecimal importo, String note, String nomefile, String nomefileLocale, Long versione) {
        super(Richiesta.RICHIESTA);

        setId(id);
        setIdCompetenza(idCompetenza);
        setNumeroProtocollo(numeroProtocollo);
        setDataProtocollo(dataProtocollo);
        setIngresso(ingresso);
        setImporto(importo);
        setNote(note);
        setNomefile(nomefile);
        setNomefileLocale(nomefileLocale);
        setVersione(versione);
        resetChangedOnNotNull();
    }
}
