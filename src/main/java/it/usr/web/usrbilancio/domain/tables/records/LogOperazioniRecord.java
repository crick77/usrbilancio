/*
 * This file is generated by jOOQ.
 */
package it.usr.web.usrbilancio.domain.tables.records;


import it.usr.web.usrbilancio.domain.tables.LogOperazioni;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class LogOperazioniRecord extends UpdatableRecordImpl<LogOperazioniRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>usrbilancio.log_operazioni.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>usrbilancio.log_operazioni.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>usrbilancio.log_operazioni.service</code>.
     */
    public void setService(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>usrbilancio.log_operazioni.service</code>.
     */
    public String getService() {
        return (String) get(1);
    }

    /**
     * Setter for <code>usrbilancio.log_operazioni.arg1</code>.
     */
    public void setArg1(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>usrbilancio.log_operazioni.arg1</code>.
     */
    public String getArg1() {
        return (String) get(2);
    }

    /**
     * Setter for <code>usrbilancio.log_operazioni.arg2</code>.
     */
    public void setArg2(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>usrbilancio.log_operazioni.arg2</code>.
     */
    public String getArg2() {
        return (String) get(3);
    }

    /**
     * Setter for <code>usrbilancio.log_operazioni.arg3</code>.
     */
    public void setArg3(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>usrbilancio.log_operazioni.arg3</code>.
     */
    public String getArg3() {
        return (String) get(4);
    }

    /**
     * Setter for <code>usrbilancio.log_operazioni.arg4</code>.
     */
    public void setArg4(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>usrbilancio.log_operazioni.arg4</code>.
     */
    public String getArg4() {
        return (String) get(5);
    }

    /**
     * Setter for <code>usrbilancio.log_operazioni.arg5</code>.
     */
    public void setArg5(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>usrbilancio.log_operazioni.arg5</code>.
     */
    public String getArg5() {
        return (String) get(6);
    }

    /**
     * Setter for <code>usrbilancio.log_operazioni.originale</code>.
     */
    public void setOriginale(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>usrbilancio.log_operazioni.originale</code>.
     */
    public String getOriginale() {
        return (String) get(7);
    }

    /**
     * Setter for <code>usrbilancio.log_operazioni.operatore</code>.
     */
    public void setOperatore(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>usrbilancio.log_operazioni.operatore</code>.
     */
    public String getOperatore() {
        return (String) get(8);
    }

    /**
     * Setter for <code>usrbilancio.log_operazioni.data_ora</code>.
     */
    public void setDataOra(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>usrbilancio.log_operazioni.data_ora</code>.
     */
    public LocalDateTime getDataOra() {
        return (LocalDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LogOperazioniRecord
     */
    public LogOperazioniRecord() {
        super(LogOperazioni.LOG_OPERAZIONI);
    }

    /**
     * Create a detached, initialised LogOperazioniRecord
     */
    public LogOperazioniRecord(Integer id, String service, String arg1, String arg2, String arg3, String arg4, String arg5, String originale, String operatore, LocalDateTime dataOra) {
        super(LogOperazioni.LOG_OPERAZIONI);

        setId(id);
        setService(service);
        setArg1(arg1);
        setArg2(arg2);
        setArg3(arg3);
        setArg4(arg4);
        setArg5(arg5);
        setOriginale(originale);
        setOperatore(operatore);
        setDataOra(dataOra);
        resetChangedOnNotNull();
    }
}
