/*
 * This file is generated by jOOQ.
 */
package it.usr.web.usrbilancio.domain.tables;


import it.usr.web.usrbilancio.domain.Keys;
import it.usr.web.usrbilancio.domain.Usrbilancio;
import it.usr.web.usrbilancio.domain.tables.OrdinativoAppoggio.OrdinativoAppoggioPath;
import it.usr.web.usrbilancio.domain.tables.records.AllegatoAppoggioRecord;

import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.InverseForeignKey;
import org.jooq.Name;
import org.jooq.Path;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.Record;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AllegatoAppoggio extends TableImpl<AllegatoAppoggioRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>usrbilancio.allegato_appoggio</code>
     */
    public static final AllegatoAppoggio ALLEGATO_APPOGGIO = new AllegatoAppoggio();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AllegatoAppoggioRecord> getRecordType() {
        return AllegatoAppoggioRecord.class;
    }

    /**
     * The column <code>usrbilancio.allegato_appoggio.id</code>.
     */
    public final TableField<AllegatoAppoggioRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column
     * <code>usrbilancio.allegato_appoggio.id_ordinativo_appoggio</code>.
     */
    public final TableField<AllegatoAppoggioRecord, Integer> ID_ORDINATIVO_APPOGGIO = createField(DSL.name("id_ordinativo_appoggio"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>usrbilancio.allegato_appoggio.gruppo</code>.
     */
    public final TableField<AllegatoAppoggioRecord, String> GRUPPO = createField(DSL.name("gruppo"), SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>usrbilancio.allegato_appoggio.nomefile</code>.
     */
    public final TableField<AllegatoAppoggioRecord, String> NOMEFILE = createField(DSL.name("nomefile"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>usrbilancio.allegato_appoggio.nomefile_locale</code>.
     */
    public final TableField<AllegatoAppoggioRecord, String> NOMEFILE_LOCALE = createField(DSL.name("nomefile_locale"), SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>usrbilancio.allegato_appoggio.descrizione</code>.
     */
    public final TableField<AllegatoAppoggioRecord, String> DESCRIZIONE = createField(DSL.name("descrizione"), SQLDataType.VARCHAR(255), this, "");

    private AllegatoAppoggio(Name alias, Table<AllegatoAppoggioRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private AllegatoAppoggio(Name alias, Table<AllegatoAppoggioRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased <code>usrbilancio.allegato_appoggio</code> table
     * reference
     */
    public AllegatoAppoggio(String alias) {
        this(DSL.name(alias), ALLEGATO_APPOGGIO);
    }

    /**
     * Create an aliased <code>usrbilancio.allegato_appoggio</code> table
     * reference
     */
    public AllegatoAppoggio(Name alias) {
        this(alias, ALLEGATO_APPOGGIO);
    }

    /**
     * Create a <code>usrbilancio.allegato_appoggio</code> table reference
     */
    public AllegatoAppoggio() {
        this(DSL.name("allegato_appoggio"), null);
    }

    public <O extends Record> AllegatoAppoggio(Table<O> path, ForeignKey<O, AllegatoAppoggioRecord> childPath, InverseForeignKey<O, AllegatoAppoggioRecord> parentPath) {
        super(path, childPath, parentPath, ALLEGATO_APPOGGIO);
    }

    /**
     * A subtype implementing {@link Path} for simplified path-based joins.
     */
    public static class AllegatoAppoggioPath extends AllegatoAppoggio implements Path<AllegatoAppoggioRecord> {

        private static final long serialVersionUID = 1L;
        public <O extends Record> AllegatoAppoggioPath(Table<O> path, ForeignKey<O, AllegatoAppoggioRecord> childPath, InverseForeignKey<O, AllegatoAppoggioRecord> parentPath) {
            super(path, childPath, parentPath);
        }
        private AllegatoAppoggioPath(Name alias, Table<AllegatoAppoggioRecord> aliased) {
            super(alias, aliased);
        }

        @Override
        public AllegatoAppoggioPath as(String alias) {
            return new AllegatoAppoggioPath(DSL.name(alias), this);
        }

        @Override
        public AllegatoAppoggioPath as(Name alias) {
            return new AllegatoAppoggioPath(alias, this);
        }

        @Override
        public AllegatoAppoggioPath as(Table<?> alias) {
            return new AllegatoAppoggioPath(alias.getQualifiedName(), this);
        }
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Usrbilancio.USRBILANCIO;
    }

    @Override
    public Identity<AllegatoAppoggioRecord, Integer> getIdentity() {
        return (Identity<AllegatoAppoggioRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<AllegatoAppoggioRecord> getPrimaryKey() {
        return Keys.KEY_ALLEGATO_APPOGGIO_PRIMARY;
    }

    @Override
    public List<ForeignKey<AllegatoAppoggioRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FK_ALLEGATOAPP_ORDINATIVOAPP_IDX);
    }

    private transient OrdinativoAppoggioPath _ordinativoAppoggio;

    /**
     * Get the implicit join path to the
     * <code>usrbilancio.ordinativo_appoggio</code> table.
     */
    public OrdinativoAppoggioPath ordinativoAppoggio() {
        if (_ordinativoAppoggio == null)
            _ordinativoAppoggio = new OrdinativoAppoggioPath(this, Keys.FK_ALLEGATOAPP_ORDINATIVOAPP_IDX, null);

        return _ordinativoAppoggio;
    }

    @Override
    public AllegatoAppoggio as(String alias) {
        return new AllegatoAppoggio(DSL.name(alias), this);
    }

    @Override
    public AllegatoAppoggio as(Name alias) {
        return new AllegatoAppoggio(alias, this);
    }

    @Override
    public AllegatoAppoggio as(Table<?> alias) {
        return new AllegatoAppoggio(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public AllegatoAppoggio rename(String name) {
        return new AllegatoAppoggio(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AllegatoAppoggio rename(Name name) {
        return new AllegatoAppoggio(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public AllegatoAppoggio rename(Table<?> name) {
        return new AllegatoAppoggio(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AllegatoAppoggio where(Condition condition) {
        return new AllegatoAppoggio(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AllegatoAppoggio where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AllegatoAppoggio where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AllegatoAppoggio where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public AllegatoAppoggio where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public AllegatoAppoggio where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public AllegatoAppoggio where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public AllegatoAppoggio where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AllegatoAppoggio whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public AllegatoAppoggio whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
