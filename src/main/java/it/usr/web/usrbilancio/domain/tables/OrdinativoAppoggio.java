/*
 * This file is generated by jOOQ.
 */
package it.usr.web.usrbilancio.domain.tables;


import it.usr.web.usrbilancio.domain.Indexes;
import it.usr.web.usrbilancio.domain.Keys;
import it.usr.web.usrbilancio.domain.Usrbilancio;
import it.usr.web.usrbilancio.domain.tables.AllegatoAppoggio.AllegatoAppoggioPath;
import it.usr.web.usrbilancio.domain.tables.Codice.CodicePath;
import it.usr.web.usrbilancio.domain.tables.Competenza.CompetenzaPath;
import it.usr.web.usrbilancio.domain.tables.TipoDocumento.TipoDocumentoPath;
import it.usr.web.usrbilancio.domain.tables.TipoRts.TipoRtsPath;
import it.usr.web.usrbilancio.domain.tables.records.OrdinativoAppoggioRecord;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.InverseForeignKey;
import org.jooq.Name;
import org.jooq.Path;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.Record;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class OrdinativoAppoggio extends TableImpl<OrdinativoAppoggioRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>usrbilancio.ordinativo_appoggio</code>
     */
    public static final OrdinativoAppoggio ORDINATIVO_APPOGGIO = new OrdinativoAppoggio();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrdinativoAppoggioRecord> getRecordType() {
        return OrdinativoAppoggioRecord.class;
    }

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.id</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.id_competenza</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, Integer> ID_COMPETENZA = createField(DSL.name("id_competenza"), SQLDataType.INTEGER, this, "");

    /**
     * The column
     * <code>usrbilancio.ordinativo_appoggio.id_tipo_documento</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, Integer> ID_TIPO_DOCUMENTO = createField(DSL.name("id_tipo_documento"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.id_tipo_rts</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, Integer> ID_TIPO_RTS = createField(DSL.name("id_tipo_rts"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.id_codice</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, Integer> ID_CODICE = createField(DSL.name("id_codice"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.numero_pagamento</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, String> NUMERO_PAGAMENTO = createField(DSL.name("numero_pagamento"), SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.data_pagamento</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, LocalDate> DATA_PAGAMENTO = createField(DSL.name("data_pagamento"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.numero_documento</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, String> NUMERO_DOCUMENTO = createField(DSL.name("numero_documento"), SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.data_documento</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, LocalDate> DATA_DOCUMENTO = createField(DSL.name("data_documento"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.data_ricevimento</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, LocalDate> DATA_RICEVIMENTO = createField(DSL.name("data_ricevimento"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.beneficiario</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, String> BENEFICIARIO = createField(DSL.name("beneficiario"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.descrizione_rts</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, String> DESCRIZIONE_RTS = createField(DSL.name("descrizione_rts"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.importo</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, BigDecimal> IMPORTO = createField(DSL.name("importo"), SQLDataType.DECIMAL(10, 2), this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.note</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, String> NOTE = createField(DSL.name("note"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.fattura_numero</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, String> FATTURA_NUMERO = createField(DSL.name("fattura_numero"), SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.fattura_data</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, LocalDate> FATTURA_DATA = createField(DSL.name("fattura_data"), SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.importo_iva</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, BigDecimal> IMPORTO_IVA = createField(DSL.name("importo_iva"), SQLDataType.DECIMAL(10, 2), this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.importo_ritenuta</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, BigDecimal> IMPORTO_RITENUTA = createField(DSL.name("importo_ritenuta"), SQLDataType.DECIMAL(10, 2), this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.noterag</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, String> NOTERAG = createField(DSL.name("noterag"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.proprietario</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, String> PROPRIETARIO = createField(DSL.name("proprietario"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column
     * <code>usrbilancio.ordinativo_appoggio.data_elaborazione</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, LocalDate> DATA_ELABORAZIONE = createField(DSL.name("data_elaborazione"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>usrbilancio.ordinativo_appoggio.flag</code>.
     */
    public final TableField<OrdinativoAppoggioRecord, Integer> FLAG = createField(DSL.name("flag"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.inline("0", SQLDataType.INTEGER)), this, "");

    private OrdinativoAppoggio(Name alias, Table<OrdinativoAppoggioRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private OrdinativoAppoggio(Name alias, Table<OrdinativoAppoggioRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased <code>usrbilancio.ordinativo_appoggio</code> table
     * reference
     */
    public OrdinativoAppoggio(String alias) {
        this(DSL.name(alias), ORDINATIVO_APPOGGIO);
    }

    /**
     * Create an aliased <code>usrbilancio.ordinativo_appoggio</code> table
     * reference
     */
    public OrdinativoAppoggio(Name alias) {
        this(alias, ORDINATIVO_APPOGGIO);
    }

    /**
     * Create a <code>usrbilancio.ordinativo_appoggio</code> table reference
     */
    public OrdinativoAppoggio() {
        this(DSL.name("ordinativo_appoggio"), null);
    }

    public <O extends Record> OrdinativoAppoggio(Table<O> path, ForeignKey<O, OrdinativoAppoggioRecord> childPath, InverseForeignKey<O, OrdinativoAppoggioRecord> parentPath) {
        super(path, childPath, parentPath, ORDINATIVO_APPOGGIO);
    }

    /**
     * A subtype implementing {@link Path} for simplified path-based joins.
     */
    public static class OrdinativoAppoggioPath extends OrdinativoAppoggio implements Path<OrdinativoAppoggioRecord> {

        private static final long serialVersionUID = 1L;
        public <O extends Record> OrdinativoAppoggioPath(Table<O> path, ForeignKey<O, OrdinativoAppoggioRecord> childPath, InverseForeignKey<O, OrdinativoAppoggioRecord> parentPath) {
            super(path, childPath, parentPath);
        }
        private OrdinativoAppoggioPath(Name alias, Table<OrdinativoAppoggioRecord> aliased) {
            super(alias, aliased);
        }

        @Override
        public OrdinativoAppoggioPath as(String alias) {
            return new OrdinativoAppoggioPath(DSL.name(alias), this);
        }

        @Override
        public OrdinativoAppoggioPath as(Name alias) {
            return new OrdinativoAppoggioPath(alias, this);
        }

        @Override
        public OrdinativoAppoggioPath as(Table<?> alias) {
            return new OrdinativoAppoggioPath(alias.getQualifiedName(), this);
        }
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Usrbilancio.USRBILANCIO;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.ORDINATIVO_APPOGGIO_FK_ORDINATIVOAPP_CODICE_IDX, Indexes.ORDINATIVO_APPOGGIO_FK_ORDINATIVOAPP_COMPETENZA_IDX, Indexes.ORDINATIVO_APPOGGIO_FK_ORDINATIVOAPP_TIPODOCUMENTO_IDX, Indexes.ORDINATIVO_APPOGGIO_FK_ORDINATIVOAPP_TIPORTS_IDX);
    }

    @Override
    public Identity<OrdinativoAppoggioRecord, Integer> getIdentity() {
        return (Identity<OrdinativoAppoggioRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<OrdinativoAppoggioRecord> getPrimaryKey() {
        return Keys.KEY_ORDINATIVO_APPOGGIO_PRIMARY;
    }

    @Override
    public List<ForeignKey<OrdinativoAppoggioRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FK_ORDINATIVOAPP_COMPETENZA, Keys.FK_ORDINATIVOAPP_TIPODOCUMENTO, Keys.FK_ORDINATIVOAPP_TIPORTS, Keys.FK_ORDINATIVOAPP_CODICE);
    }

    private transient CompetenzaPath _competenza;

    /**
     * Get the implicit join path to the <code>usrbilancio.competenza</code>
     * table.
     */
    public CompetenzaPath competenza() {
        if (_competenza == null)
            _competenza = new CompetenzaPath(this, Keys.FK_ORDINATIVOAPP_COMPETENZA, null);

        return _competenza;
    }

    private transient TipoDocumentoPath _tipoDocumento;

    /**
     * Get the implicit join path to the <code>usrbilancio.tipo_documento</code>
     * table.
     */
    public TipoDocumentoPath tipoDocumento() {
        if (_tipoDocumento == null)
            _tipoDocumento = new TipoDocumentoPath(this, Keys.FK_ORDINATIVOAPP_TIPODOCUMENTO, null);

        return _tipoDocumento;
    }

    private transient TipoRtsPath _tipoRts;

    /**
     * Get the implicit join path to the <code>usrbilancio.tipo_rts</code>
     * table.
     */
    public TipoRtsPath tipoRts() {
        if (_tipoRts == null)
            _tipoRts = new TipoRtsPath(this, Keys.FK_ORDINATIVOAPP_TIPORTS, null);

        return _tipoRts;
    }

    private transient CodicePath _codice;

    /**
     * Get the implicit join path to the <code>usrbilancio.codice</code> table.
     */
    public CodicePath codice() {
        if (_codice == null)
            _codice = new CodicePath(this, Keys.FK_ORDINATIVOAPP_CODICE, null);

        return _codice;
    }

    private transient AllegatoAppoggioPath _allegatoAppoggio;

    /**
     * Get the implicit to-many join path to the
     * <code>usrbilancio.allegato_appoggio</code> table
     */
    public AllegatoAppoggioPath allegatoAppoggio() {
        if (_allegatoAppoggio == null)
            _allegatoAppoggio = new AllegatoAppoggioPath(this, null, Keys.FK_ALLEGATOAPP_ORDINATIVOAPP_IDX.getInverseKey());

        return _allegatoAppoggio;
    }

    @Override
    public OrdinativoAppoggio as(String alias) {
        return new OrdinativoAppoggio(DSL.name(alias), this);
    }

    @Override
    public OrdinativoAppoggio as(Name alias) {
        return new OrdinativoAppoggio(alias, this);
    }

    @Override
    public OrdinativoAppoggio as(Table<?> alias) {
        return new OrdinativoAppoggio(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrdinativoAppoggio rename(String name) {
        return new OrdinativoAppoggio(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OrdinativoAppoggio rename(Name name) {
        return new OrdinativoAppoggio(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public OrdinativoAppoggio rename(Table<?> name) {
        return new OrdinativoAppoggio(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OrdinativoAppoggio where(Condition condition) {
        return new OrdinativoAppoggio(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OrdinativoAppoggio where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OrdinativoAppoggio where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OrdinativoAppoggio where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public OrdinativoAppoggio where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public OrdinativoAppoggio where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public OrdinativoAppoggio where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public OrdinativoAppoggio where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OrdinativoAppoggio whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public OrdinativoAppoggio whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
